How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
	It would allow you to easily compare the different iterations of your program.
	Also, changes that are made are easily fixable if they didn't go as planned.

What do you think are the pros and cons of manually choosing when to create a commit, 
like you do in Git, vs having versions automatically saved, like Google Docs does?
	Pros:
		Commit history won't be cluttered and will be filled with the versions of your choosing.
		Each commit will be a finished version of your program.
	Cons:
		Prone to user error.
		User may forget to commit changes and lose their work.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, 
while others, like Google Docs, treat each file separately?
	The different systems are developed according to the type of users that are expected to use that system.
	Git is more likely to be used by programmers and large programming projects, while Google Docs will more likely be
	used for more common files used by a larger majority of people.

How can you use the commands git log and git diff to view the history of files?
	git log allows you to view each commit in the commit history.
	git diff allows you to compare the difference between two versions of a file.

How might using version control make you more confident to make changes that could break something?
	I won't be worried to make changes knowing that I'll easily be able to revert back to a working version.

Now that you have your workspace set up, what do you want to try using Git for?
	Get experience with an open source project.

